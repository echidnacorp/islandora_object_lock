<?php

/**
 * @file
 * REST interface for Islandora object locking.
 */

define('ISLANDORA_OBJECT_LOCK_REST_MENU', 'islandora/rest/v1/object/%/lock');

/**
 * Implements hook_menu().
 */
function islandora_object_lock_rest_menu() {
  $items = array();
  $items[ISLANDORA_OBJECT_LOCK_REST_MENU] = array(
    'page callback' => 'islandora_object_lock_rest_callback',
    'page arguments' => array(4),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
 $items['islandora/rest/v1/objectlockstatus/%'] = array(
    'page callback' => 'islandora_object_lock_rest_callback',
    'page arguments' => array(4),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Callback for REST endpoint to route requests.
 *
 * @param string $pid
 *   The object's PID.
 */
function islandora_object_lock_rest_callback($pid) {

  module_load_include('inc', 'islandora_rest', 'includes/utilities');
  $method = islandora_rest_get_request_method();

  switch ($method) {
    case 'GET':
    default:
      islandora_object_lock_rest_get($pid);
      break;

    case 'POST':
      islandora_object_lock_rest_post($pid);
      break;

    case 'DELETE':
      islandora_object_lock_rest_delete($pid);
      break;
  }
}

/**
 * GET handler.
 *
 * Prints JSON result.
 *
 * @param string $pid
 *   The object's PID.
 */
function islandora_object_lock_rest_get($pid) {
  module_load_include('inc', 'islandora_object_lock', 'includes/utilities');

  $object = islandora_object_load($pid);
  if (!islandora_object_lock_access_lock($object)) {
    islandora_object_lock_rest_unauthorized();
  }
  $locked = islandora_object_lock_is_locked($object);
  $response = array('locked' => $locked);
  if ($locked) {
    $response['expires'] = islandora_object_lock_get_lock_expiry($object);
    $response['user'] = islandora_object_lock_get_lock_username($object);
  }
  drupal_add_http_header('Content-Type', 'application/json; utf-8');
  print drupal_json_encode($response);
  exit();
}

/**
 * POST handler.
 *
 * @param string $pid
 *   The object's PID.
 */
function islandora_object_lock_rest_post($pid) {
  $object = islandora_object_load($pid);
  if (!islandora_object_lock_access_lock($object, 'lock')) {
    islandora_object_lock_rest_unauthorized();
  }
  islandora_object_lock_set_object_lock($pid);
  drupal_add_http_header('Status', 201);
  exit();
}

/**
 * DELETE handler.
 *
 * @param string $pid
 *   The object's PID.
 */
function islandora_object_lock_rest_delete($pid) {
  module_load_include('inc', 'islandora_object_lock', 'includes/utilities');

  $object = islandora_object_load($pid);
  if (!islandora_object_lock_access_lock($object, 'unlock')) {
    islandora_object_lock_rest_unauthorized();
  }
  islandora_object_lock_remove_object_lock($pid);

  // @TODO: check status
  drupal_add_http_header('Status', 200);
  exit();
}

/**
 * Handle unauthorized requests.
 */
function islandora_object_lock_rest_unauthorized() {
  if (user_is_anonymous()) {
    drupal_add_http_header('Status', 401);
  }
  else {
    drupal_add_http_header('Status', 403);
  }
  exit();
}


/**
 * Implements hook_islandora_datastream_access().
 */
function islandora_object_lock_rest_islandora_datastream_access($op, $datastream, $user) {
  // XXX: These are REST request permisions. That is, as opposed to returning
  // a boolean we are throwing a exception which islandora_rest catches and
  // handles accordingly.
  // @see islandora_rest_get_response().
  $allowable_permissions = array(
    ISLANDORA_REST_OBJECT_PUT_PERM,
    ISLANDORA_REST_OBJECT_DELETE_PERM,
    ISLANDORA_REST_DATASTREAM_POST_PERM,
    ISLANDORA_REST_DATASTREAM_PUT_PERM,
    ISLANDORA_REST_DATASTREAM_DELETE_PERM,
    ISLANDORA_REST_RELATIONSHIP_POST_PERM,
    ISLANDORA_REST_RELATIONSHIP_DELETE_PERM,
  );
  if (in_array($op, $allowable_permissions)) {
    module_load_include('inc', 'islandora_object_lock', 'includes/utilities');
    if (islandora_object_lock_is_locked($datastream->parent)) {
      if (!islandora_object_lock_user_has_lock($datastream->parent)) {
        $message = t('This object has been locked by another user.');
        if (islandora_object_lock_request_unlock_access()) {
          $message .= ' ' . t('You can request that they <a href="@release_url">release</a> the lock.', array(
              '@release_url' => url("islandora/object/{$datastream->parent}/request_unlock")));
        }
        throw new Exception($message, 409);
      };
    }
    // No more lock on the object.
    else {
      throw new Exception(t('Your lock has expired due to inactivity. To re-lock this object please <a href="javascript:window.location.reload(true)">refresh</a> the page. Any changes since your last save will be lost.'), 403);
    }
  }
}
